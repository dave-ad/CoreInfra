@page "/"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <div class="signin">
            <h5 class="card-title">Sign in</h5>
        </div>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <InputText Id="clientId" Class="form-control inputf" @bind-Value="loginModel.ClientId" placeholder="Client ID" />
                <ValidationMessage For="@(() => loginModel.ClientId)" />
            </div>

            <div class="form-group">
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" placeholder="Email address" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" placeholder="Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <div class="form-group">
                <InputCheckbox Class="form-check-input" @bind-Value="loginModel.RememberMe" /> Remember me
            </div>
            <div class="input-container">
                <button type="submit" class="btn btn-primary authBtn ">SIGN IN</button>
            </div>

            <div class="reglink">
                <p>Don't have an account? <a href="/register"><span>Sign up</span></a></p>
            </div>

        </EditForm>
    </div>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/Index");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }

}
